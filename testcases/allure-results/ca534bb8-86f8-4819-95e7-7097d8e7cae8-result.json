{"name": "None", "status": "broken", "statusDetails": {"message": "BaseException: 点击元素【点击密码登录】,通过【id】,值是【switchAccountLogin】,点击失败:Message:", "trace": "self = <common.driver.DriverOperate object at 0x0000023595647EE0>\nele_info = {'name': '点击密码登录', 'type': 'id', 'value': 'switchAccountLogin'}\n\n    def click(self, ele_info):\n        name = ele_info['name']\n        type = ele_info['type']\n        value = ele_info['value']\n        timeout = ele_info.get('timeout', 5)\n        locator = self.get_locator(ele_info)\n        try:\n            wait = WebDriverWait(driver=self.driver, timeout=timeout)\n>           wait.until(click_success(locator))\n\n..\\common\\driver.py:135: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"3b7693da296e32a62e332cc33acd83cd\")>\nmethod = <function click_success.<locals>._predicate at 0x00000235955F31C0>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except InvalidSelectorException as e:\n                raise e\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nD:\\dev\\python\\python3.10.4\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:89: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <testcases.test_send_email.TestSend object at 0x0000023595647460>\naddress = '', theme = '自动化测试的主题啦啦啦啦啦2', body = '六婶火222222锅55555555'\nsuccess = True, expect_result = None\n\n    @pytest.mark.parametrize(\"address, theme, body, success, expect_result\", parameter)\n    def test_send(self, address, theme, body, success, expect_result):\n        allure.dynamic.title(f'{expect_result}')\n    \n        global global_var\n        if global_var == 0:\n            global_var = 1\n>           LoginActions().Login(\"wulilin55\", \"Wu@200255Lilin\")\n\ntest_send_email.py:35: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\actions\\loginactions.py:16: in Login\n    page.switch_to_pwd_login()  # 切换到密码登录方式\n..\\pages\\page_login.py:99: in switch_to_pwd_login\n    self.operate.click(ele_info)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <common.driver.DriverOperate object at 0x0000023595647EE0>\nele_info = {'name': '点击密码登录', 'type': 'id', 'value': 'switchAccountLogin'}\n\n    def click(self, ele_info):\n        name = ele_info['name']\n        type = ele_info['type']\n        value = ele_info['value']\n        timeout = ele_info.get('timeout', 5)\n        locator = self.get_locator(ele_info)\n        try:\n            wait = WebDriverWait(driver=self.driver, timeout=timeout)\n            wait.until(click_success(locator))\n            self.logger.info(f'点击元素【{name}】,通过【{type}】,值是【{value}】,点击成功')\n        except BaseException as e:\n            self.logger.exception(f'点击元素【{name}】,通过【{type}】,值是【{value}】,点击失败')\n>           raise BaseException(f'点击元素【{name}】,通过【{type}】,值是【{value}】,点击失败:{e}')\nE           BaseException: 点击元素【点击密码登录】,通过【id】,值是【switchAccountLogin】,点击失败:Message:\n\n..\\common\\driver.py:139: BaseException"}, "attachments": [{"name": "log", "source": "82878a77-8adb-4071-a511-d9fc49f84add-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "b0c93832-9c62-4a42-a12c-292f3565ac76-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "address", "value": "''"}, {"name": "theme", "value": "'自动化测试的主题啦啦啦啦啦2'"}, {"name": "body", "value": "'六婶火222222锅55555555'"}, {"name": "success", "value": "True"}, {"name": "expect_result", "value": "None"}], "start": 1752842245630, "stop": 1752842256239, "uuid": "f062dda7-2f7c-4f36-920c-c12ec5ee737e", "historyId": "c66cffbdbb11d2dc3e9315a2f2cd14e4", "testCaseId": "7cbe8fc4e09c11fc1c4e46043da50016", "fullName": "testcases.test_send_email.TestSend#test_send", "labels": [{"name": "feature", "value": "发送邮件测试"}, {"name": "epic", "value": "163邮箱网站发送邮件测试"}, {"name": "parentSuite", "value": "testcases"}, {"name": "suite", "value": "test_send_email"}, {"name": "subSuite", "value": "TestSend"}, {"name": "host", "value": "DESKTOP-LOC9ENU"}, {"name": "thread", "value": "27068-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.test_send_email"}]}