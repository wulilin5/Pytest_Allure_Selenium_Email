{"name": "请填写收件人地址后再发送", "status": "broken", "statusDetails": {"message": "AttributeError: module 'pytest' has no attribute 'assume'", "trace": "self = <testcases.test_send_email.TestSend object at 0x00000193AAAE6A70>\naddress = '', theme = '', body = '', success = False\nexpect_result = '请填写收件人地址后再发送'\n\n    @pytest.mark.parametrize(\"address, theme, body, success, expect_result\", parameter)\n    def test_send(self, address, theme, body, success, expect_result):\n        allure.dynamic.title(f'{expect_result}')\n    \n        global global_var\n        if global_var == 0:\n            global_var = 1\n            LoginActions().Login(\"wulilin55\", \"Wu@200255Lilin\")\n        # PageSendEmail().switch_frame_to_default()\n        DriverOperate.globalDriverOperate.switch_to_default()\n    \n        SendEmailActions().SendEmail(address, theme, body)\n    \n        if success:\n            try:\n                sleep(2)\n                text = PageSendEmail().page_get_send_email_success_text()\n                assert text == '邮件发送成功'\n            except Exception:\n                DriverOperate.globalDriverOperate.screenshot()\n        else:\n            erro_info = PageSendEmail().page_get_send_email_failed_text()\n            print(\"erro_info: \", erro_info)\n            try:\n>               assert erro_info == expect_result\nE               AssertionError: assert '' == '请填写收件人地址后再发送'\nE                 \nE                 - 请填写收件人地址后再发送\n\ntest_send_email.py:52: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <testcases.test_send_email.TestSend object at 0x00000193AAAE6A70>\naddress = '', theme = '', body = '', success = False\nexpect_result = '请填写收件人地址后再发送'\n\n    @pytest.mark.parametrize(\"address, theme, body, success, expect_result\", parameter)\n    def test_send(self, address, theme, body, success, expect_result):\n        allure.dynamic.title(f'{expect_result}')\n    \n        global global_var\n        if global_var == 0:\n            global_var = 1\n            LoginActions().Login(\"wulilin55\", \"Wu@200255Lilin\")\n        # PageSendEmail().switch_frame_to_default()\n        DriverOperate.globalDriverOperate.switch_to_default()\n    \n        SendEmailActions().SendEmail(address, theme, body)\n    \n        if success:\n            try:\n                sleep(2)\n                text = PageSendEmail().page_get_send_email_success_text()\n                assert text == '邮件发送成功'\n            except Exception:\n                DriverOperate.globalDriverOperate.screenshot()\n        else:\n            erro_info = PageSendEmail().page_get_send_email_failed_text()\n            print(\"erro_info: \", erro_info)\n            try:\n                assert erro_info == expect_result\n            except Exception:\n                DriverOperate.globalDriverOperate.screenshot()\n>               pytest.assume(expect_result == erro_info)\nE               AttributeError: module 'pytest' has no attribute 'assume'\n\ntest_send_email.py:55: AttributeError"}, "attachments": [{"name": "log", "source": "582cc830-1a3a-4239-aa73-7f34fdd61485-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "7d3067fe-e485-45a0-893b-06903e85fe8d-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "address", "value": "''"}, {"name": "theme", "value": "''"}, {"name": "body", "value": "''"}, {"name": "success", "value": "False"}, {"name": "expect_result", "value": "'请填写收件人地址后再发送'"}], "start": 1752829080195, "stop": 1752829158887, "uuid": "16be3e6d-20c0-4aea-bf64-0d75d3e130c3", "historyId": "21252a5dbbc8430a04699a497c4a59f9", "testCaseId": "7cbe8fc4e09c11fc1c4e46043da50016", "fullName": "testcases.test_send_email.TestSend#test_send", "labels": [{"name": "epic", "value": "163邮箱网站发送邮件测试"}, {"name": "feature", "value": "发送邮件测试"}, {"name": "parentSuite", "value": "testcases"}, {"name": "suite", "value": "test_send_email"}, {"name": "subSuite", "value": "TestSend"}, {"name": "host", "value": "DESKTOP-LOC9ENU"}, {"name": "thread", "value": "8940-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.test_send_email"}]}