{"name": "None", "status": "broken", "statusDetails": {"message": "BaseException: 点击元素【点击通讯录】,通过【xpath】,值是【//div[text()='通讯录']】,点击失败:Message:", "trace": "self = <common.driver.DriverOperate object at 0x000001D3B4B71A20>\nele_info = {'name': '点击通讯录', 'type': 'xpath', 'value': \"//div[text()='通讯录']\"}\n\n    def click(self, ele_info):\n        name = ele_info['name']\n        type = ele_info['type']\n        value = ele_info['value']\n        timeout = ele_info.get('timeout', 5)\n        locator = self.get_locator(ele_info)\n        try:\n            wait = WebDriverWait(driver=self.driver, timeout=timeout)\n>           wait.until(click_success(locator))\n\n..\\common\\driver.py:135: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"c3f97c75f77e0be42f5fcfa558022699\")>\nmethod = <function click_success.<locals>._predicate at 0x000001D3B4C6D090>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except InvalidSelectorException as e:\n                raise e\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nD:\\dev\\python\\python3.10.4\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:89: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <testcases.test_contact.TestContact object at 0x000001D3B4B72CB0>\nname = 'Bob', email = 'bob@qq.com', success = True, expect_result = None\n\n    @pytest.mark.parametrize(\"name, email, success, expect_result\", parameter)\n    def test_contact(self, name, email, success, expect_result):\n        allure.dynamic.title(f'{expect_result}')\n    \n        global global_var\n        if global_var == 0:\n            global_var = 1\n            LoginActions().Login(\"wulilin55\", \"Wu@200255Lilin\")\n    \n        DriverOperate.globalDriverOperate.switch_to_default()\n    \n>       ContactActions().Contact(name, email, first_time=(global_var==1))\n\ntest_contact.py:40: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\actions\\contact_actions.py:10: in Contact\n    page.page_click_contact()\n..\\pages\\page_contact.py:18: in page_click_contact\n    self.operate.click(ele_info)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <common.driver.DriverOperate object at 0x000001D3B4B71A20>\nele_info = {'name': '点击通讯录', 'type': 'xpath', 'value': \"//div[text()='通讯录']\"}\n\n    def click(self, ele_info):\n        name = ele_info['name']\n        type = ele_info['type']\n        value = ele_info['value']\n        timeout = ele_info.get('timeout', 5)\n        locator = self.get_locator(ele_info)\n        try:\n            wait = WebDriverWait(driver=self.driver, timeout=timeout)\n            wait.until(click_success(locator))\n            self.logger.info(f'点击元素【{name}】,通过【{type}】,值是【{value}】,点击成功')\n        except BaseException as e:\n            self.logger.exception(f'点击元素【{name}】,通过【{type}】,值是【{value}】,点击失败')\n>           raise BaseException(f'点击元素【{name}】,通过【{type}】,值是【{value}】,点击失败:{e}')\nE           BaseException: 点击元素【点击通讯录】,通过【xpath】,值是【//div[text()='通讯录']】,点击失败:Message:\n\n..\\common\\driver.py:139: BaseException"}, "attachments": [{"name": "log", "source": "94d66ff4-02cb-46c1-a1e8-acc6c9b3d04d-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "ab0f63c3-042a-4cdc-9e57-99910f365a1c-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "name", "value": "'Bob'"}, {"name": "email", "value": "'bob@qq.com'"}, {"name": "success", "value": "True"}, {"name": "expect_result", "value": "None"}], "start": 1753271312834, "stop": 1753271319135, "uuid": "c74fa80e-6eea-4494-9233-de913644b191", "historyId": "2daa4e2660b8195a5e75209e71b918ac", "testCaseId": "539e2201084e8efebbd5548923eace10", "fullName": "testcases.test_contact.TestContact#test_contact", "labels": [{"name": "feature", "value": "管理联系人测试"}, {"name": "epic", "value": "163邮箱网站管理联系人测试"}, {"name": "parentSuite", "value": "testcases"}, {"name": "suite", "value": "test_contact"}, {"name": "subSuite", "value": "TestContact"}, {"name": "host", "value": "DESKTOP-LOC9ENU"}, {"name": "thread", "value": "32760-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.test_contact"}]}